// schema.prisma

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                @id @default(cuid())
  discord_id        String?               @unique
  nickname          String?
  name              String?
  birth             DateTime?
  restingHeartRate  Int?
  Workouts          Workouts[]
  subscriptions     UserSubscription[]
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
}

model UserSubscription {
  id              String        @id @default(cuid())
  user            User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String?
  subscription    Subscription? @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  subscriptionId  String?
  startDate       DateTime      @default(now())
  endDate         DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Subscription {
  id                    String             @id @default(cuid())
  userSubscriptions     UserSubscription[]
  duration              Int
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
}

enum WorkoutCategory {
  CARDIO
  INTERVAL
}

enum WorkoutName {
  WEIGHT_TRAINING
  FUNCTIONAL_STRENGTH_TRAINING
  BASKETBALL
  PILATES
  PICKLEBALL
  YOGA
  RUNNING
  CYCLING
  WALKING
  HIIT
  CLIMBING
  STEPPER
  TENNIS
  SOCCER
  SPINNING
  SWIMMING
  OTHER
}

model Workouts {
  id            String          @id @default(cuid())
  category      WorkoutCategory
  minute        Int
  heartRate     Int
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  point         Float
  intensityZone Int
  dailyLoad     Float
  workoutName   WorkoutName?    @default(OTHER)
  image         String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}